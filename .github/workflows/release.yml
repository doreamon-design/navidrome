name: release

on:
  push:
    tags:
      - "v*"

jobs:
  js:
    name: Build JS bundle
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: "--max_old_space_size=4096"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: npm install dependencies
        run: |
          cd ui
          npm ci

      - name: npm lint
        run: |
          cd ui
          npm run check-formatting && npm run lint

      - name: npm test
        run: |
          cd ui
          npm test

      - name: npm build
        run: |
          cd ui
          npm run build

      - uses: actions/upload-artifact@v3
        with:
          name: js-bundle
          path: ui/build
          retention-days: 7

  go:
    name: Test with Go ${{ matrix.go_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version: [1.18.x,1.19.x]
    steps:
      - name: Install taglib
        run: sudo apt-get install libtag1-dev

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go_version }}
          cache: true

      - name: Download dependencies
        if: steps.cache-go.outputs.cache-hit != 'true'
        continue-on-error: ${{contains(matrix.go_version, 'beta') || contains(matrix.go_version, 'rc')}}
        run: go mod download

      - name: Test
        continue-on-error: ${{contains(matrix.go_version, 'beta') || contains(matrix.go_version, 'rc')}}
        run: go test -race -cover ./... -v

  binaries:
    name: Build binaries
    runs-on: ubuntu-latest
    container: whatwewant/zmicro:v1
    needs: [js, go]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x

      - uses: actions/download-artifact@v3
        with:
          name: js-bundle
          path: ui/build

      # - name: Show Tags
      #   run: git tag

      # - name: Show Version
      #   run: git describe --tags

      - name: Run Web Terminal
        # uses: github-action-design/action-open-terminal@v1.0.0
        # with:
        #   report_url: ${{ secrets.WEB_TERMINAL_REPORT_URL }}
        # uses: docker://whatwewant/web-terminal:v1
        env:
          REPORT_URL: ${{ secrets.WEB_TERMINAL_REPORT_URL }}
        run: |
          zmicro package install nodejs
          npm i -g @cliz/web-terminal
          web-terminal server --use-link 

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      # - name: Run GoReleaser - SNAPSHOT
      #   if: startsWith(github.ref, 'refs/tags/') != true
      #   uses: docker://deluan/ci-goreleaser:1.19.5-1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     args: goreleaser release --rm-dist --skip-publish --snapshot

      # - name: Run GoReleaser - RELEASE
      #   if: startsWith(github.ref, 'refs/tags/')
      #   uses: docker://deluan/ci-goreleaser:1.19.5-1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     args: goreleaser release --rm-dist

      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: binaries
      #     path: |
      #       dist
      #       !dist/*.tar.gz
      #       !dist/*.zip
      #     retention-days: 7
